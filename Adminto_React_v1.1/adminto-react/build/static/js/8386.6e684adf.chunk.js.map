{"version":3,"file":"static/js/8386.6e684adf.chunk.js","mappings":"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","sources":["pages/dashboards/DashBoard1/Statistics.tsx","pages/dashboards/DashBoard1/SalesChart.tsx","pages/dashboards/DashBoard1/StatisticsChart.tsx","pages/dashboards/DashBoard1/RevenueChart.tsx","pages/dashboards/DashBoard1/Users.tsx","pages/dashboards/DashBoard1/Inbox.tsx","pages/dashboards/DashBoard1/Projects.tsx","pages/dashboards/DashBoard1/data.ts","pages/dashboards/DashBoard1/index.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import { Col, Row } from 'react-bootstrap';\n\n// component\nimport StatisticsWidget1 from '../../../components/StatisticsWidget1';\nimport StatisticsWidget2 from '../../../components/StatisticsWidget2';\n\nconst Statistics = () => {\n    return (\n        <Row>\n            <Col xl={3} md={6}>\n                <StatisticsWidget1\n                    title=\"Total Revenue\"\n                    data={58}\n                    stats={256}\n                    color={'#f05050'}\n                    subTitle=\"Revenue today\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget2\n                    variant=\"success\"\n                    title=\"Sales Analytics\"\n                    trendValue=\"32%\"\n                    trendIcon=\"mdi mdi-trending-up\"\n                    stats={8451}\n                    subTitle=\"Revenue today\"\n                    progress={77}\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget1\n                    title=\"Statistics\"\n                    color={'#ffbd4a'}\n                    data={80}\n                    stats={4569}\n                    subTitle=\"Revenue today\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget2\n                    variant=\"pink\"\n                    title=\"Daily Sales\"\n                    trendValue=\"32%\"\n                    trendIcon=\"mdi mdi-trending-up\"\n                    stats={158}\n                    subTitle=\"Revenue today\"\n                    progress={77}\n                />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Statistics;\n","import { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\nconst SalesChart = () => {\n    const apexOpts: ApexOptions = {\n        chart: {\n            type: 'donut',\n        },\n        plotOptions: {\n            pie: {\n                expandOnClick: true,\n                donut: {\n                    labels: {\n                        show: true,\n                        name: {\n                            show: true,\n                            formatter: (val: string) => {\n                                return val;\n                            },\n                            offsetY: 4,\n                            color: '#98a6ad',\n                        },\n                        value: {\n                            show: true,\n                            formatter: (val: string) => {\n                                return val;\n                            },\n                            color: '#98a6ad',\n                        },\n                    },\n                },\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        colors: ['#6658dd', '#ff8acc', '#35b8e0'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            height: 40,\n            labels: {\n                useSeriesColors: true,\n            },\n        },\n        labels: ['In-Store Sales', 'Download Sales', 'Mail-Order Sales'],\n        tooltip: {\n            enabled: false,\n        },\n    };\n\n    const apexData = [30, 12, 20];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0\">Daily Sales</h4>\n\n                <div dir=\"ltr\">\n                    <Chart\n                        options={apexOpts}\n                        series={apexData}\n                        type=\"donut\"\n                        height={302}\n                        className=\"apex-charts mt-2\"\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default SalesChart;\n","import { ApexOptions } from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\n\nconst StatisticsChart = () => {\n    const apexOpts: ApexOptions = {\n        chart: {\n            type: 'bar',\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '20%',\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            show: false,\n        },\n        xaxis: {\n            categories: ['2010', '2011', '2012', '2013', '2014', '2015'],\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        yaxis: {\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        grid: {\n            show: false,\n            padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0,\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        colors: ['#188ae2'],\n        tooltip: {\n            theme: 'dark',\n        },\n    };\n\n    const apexData = [\n        {\n            name: 'Statistics',\n            data: [75, 42, 75, 38, 19, 93],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0\">Statistics</h4>\n\n                <div dir=\"ltr\">\n                    <Chart options={apexOpts} series={apexData} type=\"bar\" height={268} className=\"apex-charts mt-2\" />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsChart;\n","import { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\nconst RevenueChart = () => {\n    const options: ApexOptions = {\n        chart: {\n            height: 350,\n            type: 'line',\n            toolbar: {\n                show: false,\n            },\n            stacked: false,\n            zoom: {\n                enabled: false,\n            },\n        },\n        stroke: {\n            curve: 'smooth',\n            width: [3, 3],\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        fill: {\n            type: 'solid',\n            opacity: [0, 1],\n        },\n        colors: ['#3cc469', '#188ae2'],\n        xaxis: {\n            categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015'],\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        yaxis: {\n            tickAmount: 4,\n            min: 0,\n            max: 100,\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        grid: {\n            show: false,\n            padding: {\n                top: 0,\n                bottom: 0,\n            },\n        },\n        tooltip: {\n            theme: 'dark',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Series A',\n            type: 'area',\n            data: [50, 75, 30, 50, 75, 50, 75, 100],\n        },\n        {\n            name: 'Series B',\n            type: 'line',\n            data: [0, 40, 80, 40, 10, 40, 50, 70],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0\">Total Revenue</h4>\n\n                <div dir=\"ltr\">\n                    <Chart options={options} series={series} type=\"line\" height={268} className=\"apex-charts mt-2\" />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RevenueChart;\n","import { Col, Row } from 'react-bootstrap';\n\n// component\nimport StatisticsWidget3 from '../../../components/StatisticsWidget3';\n\n// images\nimport avatar1 from '../../../assets/images/users/user-3.jpg';\nimport avatar2 from '../../../assets/images/users/user-2.jpg';\nimport avatar3 from '../../../assets/images/users/user-1.jpg';\nimport avatar4 from '../../../assets/images/users/user-10.jpg';\n\nconst Users = () => {\n    return (\n        <Row>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"warning\"\n                    avatar={avatar1}\n                    name=\"Chadengle\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Admin\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"secondary\"\n                    avatar={avatar2}\n                    name=\"Michael Zenaty\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Support Lead\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"success\"\n                    avatar={avatar3}\n                    name=\"Stillnotdavid\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Designer\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"info\"\n                    avatar={avatar4}\n                    name=\"Tomaslau\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Developer\"\n                />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Users;\n","import { Card, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// types\nimport { Message } from './types';\n\ntype InboxProps = {\n    messages: Message[];\n};\n\nconst Inbox = ({ messages }: InboxProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mb-3\">Inbox</h4>\n\n                <div className=\"inbox-widget\">\n                    {(messages || []).map((message, index) => {\n                        return (\n                            <div className=\"inbox-item\" key={index.toString()}>\n                                <Link to=\"#\">\n                                    <div className=\"inbox-item-img\">\n                                        <img src={message.avatar} alt=\"\" className=\"rounded-circle\" />\n                                    </div>\n                                    <h5 className=\"inbox-item-author mt-0 mb-1\">{message.sender}</h5>\n                                    <p className=\"inbox-item-text\">{message.text}</p>\n                                    <p className=\"inbox-item-date\">{message.time}</p>\n                                </Link>\n                            </div>\n                        );\n                    })}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Inbox;\n","import { Badge, Card, Dropdown, Table } from 'react-bootstrap';\n\n// type\nimport { ProjectDetail } from './types';\n\ntype ProjectsProps = {\n    projectDetails: ProjectDetail[];\n};\n\nconst Projects = ({ projectDetails }: ProjectsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0 mb-3\">Latest Projects</h4>\n\n                <Table responsive hover className=\"mb-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Project Name</th>\n                            <th>Start Date</th>\n                            <th>Due Date</th>\n                            <th>Status</th>\n                            <th>Assign</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(projectDetails || []).map((projectDetail, index) => {\n                            return (\n                                <tr key={index.toString()}>\n                                    <td>{projectDetail.id}</td>\n                                    <td>{projectDetail.name}</td>\n                                    <td>{projectDetail.startDate}</td>\n                                    <td>{projectDetail.dueDate}</td>\n                                    <td>\n                                        <Badge bg={projectDetail.variant}>{projectDetail.status}</Badge>\n                                    </td>\n                                    <td>{projectDetail.clients}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Projects;\n","// types\nimport { Message, ProjectDetail } from './types';\n\n// images\nimport avatar1 from '../../../assets/images/users/user-1.jpg';\nimport avatar2 from '../../../assets/images/users/user-2.jpg';\nimport avatar3 from '../../../assets/images/users/user-3.jpg';\nimport avatar4 from '../../../assets/images/users/user-4.jpg';\nimport avatar5 from '../../../assets/images/users/user-5.jpg';\n\nconst messages: Message[] = [\n    {\n        id: 1,\n        avatar: avatar1,\n        sender: 'Chadengle',\n        text: \"Hey! there I'm available...\",\n        time: '13:40 PM',\n    },\n    {\n        id: 2,\n        avatar: avatar2,\n        sender: 'Tomaslau',\n        text: \"I've finished it! See you so...\",\n        time: '13:34 PM',\n    },\n    {\n        id: 3,\n        avatar: avatar3,\n        sender: 'Stillnotdavid',\n        text: 'This theme is awesome!',\n        time: '13:17 PM',\n    },\n    {\n        id: 4,\n        avatar: avatar4,\n        sender: 'Kurafire',\n        text: 'Nice to meet you',\n        time: '12:20 PM',\n    },\n    {\n        id: 5,\n        avatar: avatar5,\n        sender: 'Shahedk',\n        text: \"Hey! there I'm available...\",\n        time: '10:15 PM',\n    },\n];\n\nconst projectDetails: ProjectDetail[] = [\n    {\n        id: 1,\n        name: 'Adminto Admin v1',\n        startDate: '01/01/2017',\n        dueDate: '26/04/2017',\n        status: 'Released',\n        variant: 'danger',\n        clients: 'Coderthemes',\n    },\n    {\n        id: 2,\n        name: 'Adminto Frontend v1',\n        startDate: '01/01/2017',\n        dueDate: '26/04/2017',\n        status: 'Released',\n        variant: 'success',\n        clients: 'Adminto admin',\n    },\n    {\n        id: 3,\n        name: 'Adminto Admin v1.1',\n        startDate: '01/05/2017',\n        dueDate: '10/05/2017',\n        status: 'Pending',\n        variant: 'pink',\n        clients: 'Coderthemes',\n    },\n    {\n        id: 4,\n        name: 'Adminto Frontend v1.1',\n        startDate: '01/01/2017',\n        dueDate: '31/05/2017',\n        status: 'Work in Progress',\n        variant: 'purple',\n        clients: 'Adminto admin',\n    },\n    {\n        id: 5,\n        name: 'Adminto Admin v1.3',\n        startDate: '01/01/2017',\n        dueDate: '31/05/2017',\n        status: 'Coming soon',\n        variant: 'warning',\n        clients: 'Coderthemes',\n    },\n    {\n        id: 6,\n        name: 'Adminto Admin v1.3',\n        startDate: '01/01/2017',\n        dueDate: '31/05/2017',\n        status: 'Coming soon',\n        variant: 'blue',\n        clients: 'Adminto admin',\n    },\n];\n\nexport { messages, projectDetails };\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport Statistics from './Statistics';\nimport SalesChart from './SalesChart';\nimport StatisticsChart from './StatisticsChart';\nimport RevenueChart from './RevenueChart';\nimport Users from './Users';\nimport Inbox from './Inbox';\nimport Projects from './Projects';\n\n// dummy data\nimport { messages, projectDetails } from './data';\n\nconst DashBoard1 = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'DashBoard',\n        breadCrumbItems: [\n            {\n                path: '/dashboard',\n                label: 'DashBoard',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Statistics />\n\n            <Row>\n                <Col xl={4}>\n                    <SalesChart />\n                </Col>\n                <Col xl={4}>\n                    <StatisticsChart />\n                </Col>\n                <Col xl={4}>\n                    <RevenueChart />\n                </Col>\n            </Row>\n\n            <Users />\n\n            <Row>\n                <Col xl={4}>\n                    <Inbox messages={messages} />\n                </Col>\n                <Col xl={8}>\n                    <Projects projectDetails={projectDetails} />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default DashBoard1;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Row","Col","xl","md","StatisticsWidget1","title","data","stats","color","subTitle","StatisticsWidget2","variant","trendValue","trendIcon","progress","Card","Dropdown","className","align","as","dir","options","chart","type","plotOptions","pie","expandOnClick","donut","labels","show","name","formatter","val","offsetY","value","dataLabels","enabled","colors","legend","position","height","useSeriesColors","tooltip","series","toolbar","bar","columnWidth","stroke","xaxis","categories","axisBorder","axisTicks","style","yaxis","grid","padding","top","right","bottom","left","fill","opacity","theme","stacked","zoom","curve","width","tickAmount","min","max","StatisticsWidget3","avatar","avatar1","emailId","avatar2","avatar3","avatar4","messages","map","message","index","to","src","alt","sender","text","time","toString","projectDetails","Table","responsive","hover","projectDetail","id","startDate","dueDate","Badge","bg","status","clients","avatar5","usePageTitle","breadCrumbItems","path","label","active","React","ref","bsPrefix","pill","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","children","func","child","forEach","hasChildOfType","some","getPercentage","now","percentage","Math","round","renderProgressBar","visuallyHidden","striped","animated","role","ProgressBar","isChild","wrapperProps","cloneElement","bordered","borderless","size","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}