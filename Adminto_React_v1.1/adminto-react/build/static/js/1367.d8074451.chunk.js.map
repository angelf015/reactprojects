{"version":3,"file":"static/js/1367.d8074451.chunk.js","mappings":"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","sources":["pages/uikit/Offcanvases/DefaultOffcanvas.tsx","pages/uikit/Offcanvases/OffCanvasWithBackdrop.tsx","pages/uikit/Offcanvases/OffcanvasPlacement.tsx","pages/uikit/Offcanvases/data.ts","pages/uikit/Offcanvases/index.tsx","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["import { useState } from 'react';\nimport { Card, Offcanvas, Button } from 'react-bootstrap';\n\nconst DefaultOffcanvas = () => {\n    const [show, setShow] = useState<boolean>(false);\n\n    /**\n     * handle modal toggle\n     */\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Offcanvas</h4>\n                <p className=\"text-muted\">\n                    <code>Offcanvas</code> includes support for a header with a close button and an optional body class\n                    for some initial padding. We suggest that you include offcanvas headers with dismiss actions\n                    whenever possible, or provide an explicit dismiss action.\n                </p>\n\n                <Button onClick={toggle}>Launch</Button>\n\n                <Offcanvas show={show} onHide={toggle}>\n                    <Offcanvas.Header closeButton>\n                        <Offcanvas.Title className=\"mb-0\">Offcanvas</Offcanvas.Title>\n                    </Offcanvas.Header>\n                    <Offcanvas.Body>\n                        <div>\n                            Some text as placeholder. In real life you can have the elements you have chosen. Like,\n                            text, images, lists, etc.\n                        </div>\n                        <h5 className=\"mt-3\">List</h5>\n                        <ul className=\"ps-3\">\n                            <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n                            <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n                            <li className=\"\">Quis autem vel eum iure qui in ea</li>\n                        </ul>\n                        <ul className=\"ps-3\">\n                            <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\n                            <li className=\"\">Et harum quidem rerum facilis</li>\n                            <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n                        </ul>\n                    </Offcanvas.Body>\n                </Offcanvas>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DefaultOffcanvas;\n","import { useState } from 'react';\nimport { Card, Offcanvas, Button } from 'react-bootstrap';\n\n// types\nimport { BackdropOption } from './types';\n\ntype OffCanvasWithBackdropProps = {\n    options: BackdropOption[];\n};\n\nconst BackdropButton = ({ name, scroll, backdrop }: BackdropOption) => {\n    const [show, setShow] = useState<boolean>(false);\n\n    /**\n     * handle modal toggle\n     */\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button onClick={toggle} className=\"me-1\">\n                {name}\n            </Button>\n            <Offcanvas show={show} onHide={toggle} scroll={scroll} backdrop={backdrop}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\n                    images, lists, etc.\n                    <h5 className=\"mt-3\">List</h5>\n                    <ul className=\"ps-3\">\n                        <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n                        <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n                        <li className=\"\">Quis autem vel eum iure qui in ea</li>\n                    </ul>\n                    <ul className=\"ps-3\">\n                        <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\n                        <li className=\"\">Et harum quidem rerum facilis</li>\n                        <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n                    </ul>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst OffCanvasWithBackdrop = ({ options }: OffCanvasWithBackdropProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Offcanvas Backdrop</h4>\n                <p className=\"text-muted\">\n                    Scrolling the <code>&lt;body&gt;</code> element is disabled when an offcanvas and its backdrop are\n                    visible. Use the <code>scroll</code> prop to toggle <code>&lt;body&gt;</code> scrolling and{' '}\n                    <code>backdrop</code> prop to toggle the backdrop.\n                </p>\n\n                <div className=\"button-list\">\n                    {(options || []).map((props, idx) => (\n                        <BackdropButton key={idx} name={props.name} scroll={props.scroll} backdrop={props.backdrop} />\n                    ))}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default OffCanvasWithBackdrop;\n","import { useState } from 'react';\nimport { Card, Offcanvas, Button } from 'react-bootstrap';\n\n// types\nimport { PlacementOption } from './types';\n\ntype OffcanvasPlacementProps = {\n    options: PlacementOption[];\n};\n\nconst PlacementButton = ({ name, placement }: PlacementOption) => {\n    const [show, setShow] = useState<boolean>(false);\n\n    /**\n     * handle modal toggle\n     */\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button onClick={toggle}>Toggle {name} offcanvas</Button>\n            <Offcanvas show={show} onHide={toggle} placement={placement}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas {name}</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\n                    images, lists, etc.\n                    <h5 className=\"mt-3\">List</h5>\n                    <ul className=\"ps-3\">\n                        <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n                        <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n                        <li className=\"\">Quis autem vel eum iure qui in ea</li>\n                    </ul>\n                    <ul className=\"ps-3\">\n                        <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\n                        <li className=\"\">Et harum quidem rerum facilis</li>\n                        <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n                    </ul>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst OffcanvasPlacement = ({ options }: OffcanvasPlacementProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Offcanvas Placement</h4>\n                <ul className=\"text-muted\">\n                    <li>\n                        <code>start</code> places offcanvas on the left of the viewport\n                    </li>\n                    <li>\n                        <code>end</code> places offcanvas on the right of the viewport\n                    </li>\n                    <li>\n                        <code>top</code> places offcanvas on the top of the viewport\n                    </li>\n                    <li>\n                        <code>bottom</code> places offcanvas on the bottom of the viewport\n                    </li>\n                </ul>\n\n                <div className=\"button-list\">\n                    {(options || []).map((option, index) => (\n                        <PlacementButton key={index.toString()} placement={option.placement!} name={option.name} />\n                    ))}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default OffcanvasPlacement;\n","// types\nimport { BackdropOption, PlacementOption } from './types';\n\nconst backdropOptions: BackdropOption[] = [\n    {\n        name: 'Enable body scrolling',\n        scroll: true,\n        backdrop: false,\n    },\n    {\n        name: 'Enable backdrop (default)',\n        scroll: false,\n        backdrop: true,\n    },\n    {\n        name: 'Enable both scrolling & backdrop',\n        scroll: true,\n        backdrop: true,\n    },\n];\n\nconst placementOptions: PlacementOption[] = [\n    {\n        name: 'top',\n        placement: 'top',\n    },\n    {\n        name: 'right',\n        placement: 'end',\n    },\n    {\n        name: 'bottom',\n        placement: 'bottom',\n    },\n    {\n        name: 'left',\n        placement: 'start',\n    },\n];\n\nexport { backdropOptions, placementOptions };\n","import { Row, Col } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport DefaultOffcanvas from './DefaultOffcanvas';\nimport OffCanvasWithBackdrop from './OffCanvasWithBackdrop';\nimport OffcanvasPlacement from './OffcanvasPlacement';\n\n// dummy data\nimport { backdropOptions, placementOptions } from './data';\n\nconst Offcanvases = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Offcanvas',\n        breadCrumbItems: [\n            {\n                path: '/base-ui/offcanvas',\n                label: 'Base UI',\n            },\n            {\n                path: '/base-ui/offcanvas',\n                label: 'Offcanvas',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <Row>\n            <Col md={6}>\n                <DefaultOffcanvas />\n                <OffCanvasWithBackdrop options={backdropOptions} />\n            </Col>\n\n            <Col md={6}>\n                <OffcanvasPlacement options={placementOptions} />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Offcanvases;\n","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('offcanvas-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.defaultProps = defaultProps;\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nOffcanvasHeader.defaultProps = defaultProps;\nexport default OffcanvasHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH5 = divWithClassName('h5');\nexport default createWithBsPrefix('offcanvas-title', {\n  Component: DivStyledAsH5\n});","import classNames from 'classnames';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useMemo, useRef } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start'\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: ref,\n      backdrop: backdrop,\n      container: container,\n      keyboard: keyboard,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus && !scroll,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onShow: onShow,\n      onHide: handleHide,\n      onEnter: handleEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: DialogTransition,\n      backdropTransition: BackdropTransition,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["useState","show","setShow","toggle","prevState","Card","className","Button","onClick","Offcanvas","onHide","closeButton","BackdropButton","name","scroll","backdrop","options","map","props","idx","PlacementButton","placement","option","index","toString","backdropOptions","placementOptions","usePageTitle","title","breadCrumbItems","path","label","active","Row","Col","md","toFnRef","ref","value","current","refA","refB","useMemo","a","b","mergeRefs","dataAttr","property","dataProp","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","contains","context","node","compareDocumentPosition","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","React","as","bsPrefix","variant","size","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","disabled","displayName","defaultProps","CardImg","CardHeader","contextValue","cardHeaderBsPrefix","CardHeaderContext","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","EXITING","in","mountOnEnter","unmountOnExit","appear","OffcanvasHeader","AbstractModalHeader","closeLabel","DialogTransition","BackdropTransition","Fade","ariaLabelledby","keyboard","onEscapeKeyDown","onShow","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalManager","useRef","onToggle","NavbarContext","handleHide","useEventCallback","modalContext","renderBackdrop","useCallback","backdropProps","ModalContext","BaseModal","style","visibility","args","BootstrapModalManager","handleContainerOverflow","getSharedManager","transition","backdropTransition","renderDialog","dialogProps","role","OffcanvasBody","OffcanvasTitle","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","BsComponent","Tag","resolvedPrefix","p","_superPropBase","hasOwnProperty","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","apply","this"],"sourceRoot":""}